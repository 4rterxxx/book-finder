document.addEventListener('DOMContentLoaded', () => {
  const searchInput = document.getElementById('searchInput');
  const searchButton = document.getElementById('searchButton');
  const resultsContainer = document.getElementById('results');
  const bookDetailsContainer = document.getElementById('bookDetails');
  const loadingIndicator = document.getElementById('loading');

  const API_URL = 'https://www.googleapis.com/books/v1/volumes';

  initTheme();

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –ø–µ—Ä–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
  searchInput.value = 'javascript';
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
  searchButton.addEventListener('click', handleSearch);
  searchInput.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') handleSearch();
  });

  // –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫
  handleSearch();

  async function handleSearch() {
    const searchQuery = searchInput.value.trim();
    if (!searchQuery) {
      showNoResults('–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞');
      return;
    }

    showLoading();
    clearResults();
    hideBookDetails();

    try {
      const books = await fetchBooks(searchQuery);
      if (books.length > 0) {
        displayBooks(books);
      } else {
        showNoResults('–ö–Ω–∏–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å.');
      }
    } catch (error) {
      showError(error);
    } finally {
      hideLoading();
    }
  }

  async function fetchBooks(query) {
    const response = await fetch(`${API_URL}?q=${encodeURIComponent(query)}&maxResults=12`);
    if (!response.ok) {
      throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');
    }
    const data = await response.json();
    return data.items || [];
  }

  function displayBooks(books) {
    books.forEach(book => {
      const bookCard = createBookCard(book);
      resultsContainer.appendChild(bookCard);
    });
  }

  function createBookCard(book) {
    const bookCard = document.createElement('div');
    bookCard.className = 'book-card';
    
    const info = book.volumeInfo;
    const title = info.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
    const authors = info.authors ? info.authors.join(', ') : '–ê–≤—Ç–æ—Ä –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω';
    const coverUrl = info.imageLinks?.thumbnail || 'https://via.placeholder.com/150x200?text=–û–±–ª–æ–∂–∫–∞+–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
    
    bookCard.innerHTML = `
      <img src="${coverUrl}" alt="${title}" onerror="this.src='https://via.placeholder.com/150x200?text=–û–±–ª–æ–∂–∫–∞+–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'">
      <h3>${title}</h3>
      <p>${authors}</p>
    `;
    
    bookCard.addEventListener('click', () => showBookDetails(book));
    return bookCard;
  }

  function showBookDetails(book) {
    const info = book.volumeInfo;
    const title = info.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
    const authors = info.authors ? info.authors.join(', ') : '–ê–≤—Ç–æ—Ä –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω';
    const coverUrl = info.imageLinks?.thumbnail || 'https://via.placeholder.com/300x400?text=–û–±–ª–æ–∂–∫–∞+–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
    const description = info.description ? `${info.description.slice(0, 200)}...` : '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
    
    bookDetailsContainer.innerHTML = `
      <div class="book-detail-content">
        <div class="book-cover">
          <img src="${coverUrl}" alt="${title}" onerror="this.src='https://via.placeholder.com/300x400?text=–û–±–ª–æ–∂–∫–∞+–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'">
        </div>
        <div class="book-info">
          <h2>${title}</h2>
          <p><strong>–ê–≤—Ç–æ—Ä—ã:</strong> ${authors}</p>
          ${info.publishedDate ? `<p><strong>–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ:</strong> ${info.publishedDate}</p>` : ''}
          <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> ${description}</p>
          <a href="${info.infoLink}" target="_blank" rel="noopener">–°—Å—ã–ª–∫–∞ –Ω–∞ Google Books</a>
        </div>
      </div>
      <button class="back-button">–û–±—Ä–∞—Ç–Ω–æ –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º</button>
    `;
    
    bookDetailsContainer.classList.remove('hidden');
    resultsContainer.classList.add('hidden');
    
    document.querySelector('.back-button').addEventListener('click', () => {
      bookDetailsContainer.classList.add('hidden');
      resultsContainer.classList.remove('hidden');
    });
  }

  function showLoading() {
    loadingIndicator.classList.remove('hidden');
    loadingIndicator.textContent = '–ü–æ–∏—Å–∫ –∫–Ω–∏–≥...';
  }

  function hideLoading() {
    loadingIndicator.classList.add('hidden');
  }

  function clearResults() {
    resultsContainer.innerHTML = '';
  }

  function hideBookDetails() {
    bookDetailsContainer.classList.add('hidden');
  }

  function showNoResults(message = '–ö–Ω–∏–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã') {
    resultsContainer.innerHTML = `<p class="no-results">${message}</p>`;
  }

  function showError(error) {
    console.error('–û—à–∏–±–∫–∞:', error);
    resultsContainer.innerHTML = `
      <p class="error-message">
        –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.
        <button class="retry-button">–ü–æ–≤—Ç–æ—Ä–∏—Ç—å</button>
      </p>
    `;
    document.querySelector('.retry-button').addEventListener('click', handleSearch);
  }

  function initTheme() {
    const themeToggle = document.createElement('button');
    themeToggle.className = 'theme-toggle';
    themeToggle.textContent = 'üåì';
    themeToggle.addEventListener('click', toggleTheme);
    document.querySelector('.header').appendChild(themeToggle);

    if (localStorage.getItem('darkMode') === 'true') {
      document.body.classList.add('dark-mode');
    }
  }

  function toggleTheme() {
    document.body.classList.toggle('dark-mode');
    localStorage.setItem('darkMode', document.body.classList.contains('dark-mode'));
  }
});